// Generated by CoffeeScript 1.12.7
(function() {
  var cells, cells_data, height, num_sites, radius, randomColor, sites, sites_data, svg, voronoi, width;

  svg = d3.select('svg');

  width = svg.node().getBoundingClientRect().width;

  height = svg.node().getBoundingClientRect().height;

  num_sites = `128`;

  radius = 2;

  sites_data = d3.range(num_sites).map(function() {
    return {
      x: Math.round(Math.random() * (width - radius * 2) + radius),
      y: Math.round(Math.random() * (height - radius * 2) + radius)
    };
  });

  voronoi = d3.voronoi().x(function(d) {
    return d.x;
  }).y(function(d) {
    return d.y;
  }).extent([[-1, -1], [width + 1, height + 1]]);

  cells_data = voronoi.polygons(sites_data);

  cells = svg.selectAll('.cell').data(cells_data);

  randomColor = function() {
    return 'black'
    var color, i, letters, num;
    console.log('asdfasdfa');
    // letters = '0123456789ABCDEF'.split('');
    letters = '0123456789ABCDEF'.split('');
    color = '#';
    for (num = i = 0; i <= 5; num = ++i) {
      color += letters[Math.round(Math.random() * 15)];
    }
    return color;
  };

  cells.enter().append('path').attrs({
    "class": 'cell',
    style: function() {
      return 'fill: ' + randomColor();
    },
    d: function(d) {
      if (d == null) {
        return null;
      } else {
        return "M" + d.join("L") + "Z";
      }
    }
  });

  sites = svg.selectAll('.site').data(sites_data);

  sites.enter().append('circle').attrs({
    "class": 'site',
    r: radius,
    cx: function(d) {
      return d.x;
    },
    cy: function(d) {
      return d.y;
    }
  });

}).call(this);
